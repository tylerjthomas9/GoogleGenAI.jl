var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"CurrentModule = GoogleGenAI","category":"page"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"GoogleProvider\ngenerate_content\ncount_tokens\nembed_content\nlist_models","category":"page"},{"location":"api/#GoogleGenAI.GoogleProvider","page":"API","title":"GoogleGenAI.GoogleProvider","text":"Base.@kwdef struct GoogleProvider <: AbstractGoogleProvider\n    api_key::String = \"\"\n    base_url::String = \"https://generativelanguage.googleapis.com\"\n    api_version::String = \"v1beta\"\nend\n\nA configuration object used to set up and authenticate requests to the Google Generative Language API.\n\nFields\n\napi_key::String: Your Google API key. \nbase_url::String: The base URL for the Google Generative Language API. The default is set to \"https://generativelanguage.googleapis.com\".\napi_version::String: The version of the API you wish to access. The default is set to \"v1beta\".\n\n\n\n\n\n","category":"type"},{"location":"api/#GoogleGenAI.generate_content","page":"API","title":"GoogleGenAI.generate_content","text":"generate_content(provider::AbstractGoogleProvider, model_name::String, prompt::String, image_path::String; api_kwargs=NamedTuple(), http_kwargs=NamedTuple()) -> NamedTuple\ngenerate_content(api_key::String, model_name::String, prompt::String, image_path::String; api_kwargs=NamedTuple(), http_kwargs=NamedTuple()) -> NamedTuple\n\ngenerate_content(provider::AbstractGoogleProvider, model_name::String, conversation::Vector{Dict{Symbol,Any}}; api_kwargs=NamedTuple(), http_kwargs=NamedTuple()) -> NamedTuple\ngenerate_content(api_key::String, model_name::String, conversation::Vector{Dict{Symbol,Any}}; api_kwargs=NamedTuple(), http_kwargs=NamedTuple()) -> NamedTuple\n\nGenerate content based on a combination of text prompt and an image (optional).\n\nArguments\n\nprovider::AbstractGoogleProvider: The provider instance for API requests.\napi_key::String: Your Google API key as a string. \nmodel_name::String: The model to use for content generation.\nprompt::String: The text prompt to accompany the image.\nimage_path::String (optional): The path to the image file to include in the request.\n\nAPI Keyword Arguments\n\ntemperature::Float64 (optional): Controls the randomness in the generation process. Higher values result in more random outputs. Typically ranges between 0 and 1.\ncandidate_count::Int (optional): The number of generation candidates to consider. Currently, only one candidate can be specified.\nmax_output_tokens::Int (optional): The maximum number of tokens that the generated content should contain.\nstop_sequences::Vector{String} (optional): A list of sequences where the generation should stop. Useful for defining natural endpoints in generated content.\nsafety_settings::Vector{Dict} (optional): Settings to control the safety aspects of the generated content, such as filtering out unsafe or inappropriate content.\n\nHTTP Kwargs\n\nAll keyword arguments supported by the HTTP.request function. Documentation can be found here: https://juliaweb.github.io/HTTP.jl/stable/reference/#HTTP.request.\n\nReturns\n\nNamedTuple: A named tuple containing the following keys:\ncandidates: A vector of dictionaries, each representing a generation candidate.\nsafety_ratings: A dictionary containing safety ratings for the prompt feedback.\ntext: A string representing the concatenated text from all candidates.\nresponse_status: An integer representing the HTTP response status code.\nfinish_reason: A string indicating the reason why the generation process was finished.\n\n\n\n\n\n","category":"function"},{"location":"api/#GoogleGenAI.count_tokens","page":"API","title":"GoogleGenAI.count_tokens","text":"count_tokens(provider::AbstractGoogleProvider, model_name::String, prompt::String) -> Int\ncount_tokens(api_key::String, model_name::String, prompt::String) -> Int\n\nCalculate the number of tokens generated by the specified model for a given prompt string.\n\nArguments\n\nprovider::AbstractGoogleProvider: The provider instance containing API key and base URL information.\napi_key::String: Your Google API key as a string. \nmodel_name::String: The name of the model to use for generating content. \nprompt::String: The prompt prompt based on which the text is generated.\n\nReturns\n\nInt: The total number of tokens that the given prompt string would be broken into by the specified model's tokenizer.\n\n\n\n\n\n","category":"function"},{"location":"api/#GoogleGenAI.embed_content","page":"API","title":"GoogleGenAI.embed_content","text":"embed_content(provider::AbstractGoogleProvider, model_name::String, prompt::String http_kwargs=NamedTuple()) -> NamedTuple\nembed_content(api_key::String, model_name::String, prompt::String http_kwargs=NamedTuple()) -> NamedTuple\nembed_content(provider::AbstractGoogleProvider, model_name::String, prompts::Vector{String} http_kwargs=NamedTuple()) -> Vector{NamedTuple}\nembed_content(api_key::String, model_name::String, prompts::Vector{String}, http_kwargs=NamedTuple()) -> Vector{NamedTuple}\n\nGenerate an embedding for the given prompt text using the specified model.\n\nArguments\n\nprovider::AbstractGoogleProvider: The provider instance containing API key and base URL information.\napi_key::String: Your Google API key as a string. \nmodel_name::String: The name of the model to use for generating content. \nprompt::String: The prompt prompt based on which the text is generated.\n\nHTTP Kwargs\n\nAll keyword arguments supported by the HTTP.request function. Documentation can be found here: https://juliaweb.github.io/HTTP.jl/stable/reference/#HTTP.request.\n\nReturns\n\nNamedTuple: A named tuple containing the following keys:\nvalues: A vector of Float64 representing the embedding values for the given prompt.\nresponse_status: An integer representing the HTTP response status code.\n\n\n\n\n\n","category":"function"},{"location":"api/#GoogleGenAI.list_models","page":"API","title":"GoogleGenAI.list_models","text":"list_models(provider::AbstractGoogleProvider) -> Vector{Dict}\nlist_models(api_key::String) -> Vector{Dict}\n\nRetrieve a list of available models along with their details from the Google AI API.\n\nArguments\n\nprovider::AbstractGoogleProvider: The provider instance containing API key and base URL information.\napi_key::String: Your Google API key as a string. \n\nReturns\n\nVector{Dict}: A list of dictionaries, each containing details about an available model.\n\n\n\n\n\n","category":"function"},{"location":"#GoogleGenAI.jl-Docs","page":"Home","title":"GoogleGenAI.jl Docs","text":"","category":"section"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia wrapper to the Google generative AI API. For API functionality, see reference documentation.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"From source:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg; Pkg.add(url=\"https://github.com/tylerjthomas9/GoogleGenAI.jl/\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]  # enters the pkg interface\nPkg> add https://github.com/tylerjthomas9/GoogleGenAI.jl/","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Create a secret API key in Google AI Studio.\nSet the GOOGLE_API_KEY environment variable.","category":"page"},{"location":"#Generate-Content","page":"Home","title":"Generate Content","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using GoogleGenAI\n\nsecret_key = ENV[\"GOOGLE_API_KEY\"]\nmodel = \"gemini-1.5-flash-latest\"\nprompt = \"Hello\"\nresponse = generate_content(secret_key, model, prompt)\nprintln(response.text)","category":"page"},{"location":"","page":"Home","title":"Home","text":"outputs","category":"page"},{"location":"","page":"Home","title":"Home","text":"\"Hello! ðŸ‘‹  How can I help you today? ðŸ˜Š\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"api_kwargs = (max_output_tokens=50,)\nresponse = generate_content(secret_key, model, prompt; api_kwargs)\nprintln(response.text)","category":"page"},{"location":"","page":"Home","title":"Home","text":"outputs","category":"page"},{"location":"","page":"Home","title":"Home","text":"\"Hello! ðŸ‘‹  How can I help you today? ðŸ˜Š\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"using GoogleGenAI\n\nsecret_key = ENV[\"GOOGLE_API_KEY\"]\nmodel = \"gemini-1.5-flash-latest\"\nprompt = \"What is this image?\"\nimage_path = \"test/example.jpg\"\nresponse = generate_content(secret_key, model, prompt, image_path)\nprintln(response.text)","category":"page"},{"location":"","page":"Home","title":"Home","text":"outputs","category":"page"},{"location":"","page":"Home","title":"Home","text":"\"The logo for the Julia programming language.\"","category":"page"},{"location":"#Multi-turn-conversations","page":"Home","title":"Multi-turn conversations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using GoogleGenAI\n\nprovider = GoogleProvider(api_key=ENV[\"GOOGLE_API_KEY\"])\napi_kwargs = (max_output_tokens=50,)\nmodel = \"gemini-1.5-flash-latest\"\nconversation = [\n    Dict(:role => \"user\", :parts => [Dict(:text => \"When was Julia 1.0 released?\")])\n]\n\nresponse = generate_content(provider, model, conversation)\npush!(conversation, Dict(:role => \"model\", :parts => [Dict(:text => response.text)]))\nprintln(\"Model: \", response.text) \n\npush!(conversation, Dict(:role => \"user\", :parts => [Dict(:text => \"Who created the language?\")]))\nresponse = generate_content(provider, model, conversation; api_kwargs)\nprintln(\"Model: \", response.text)","category":"page"},{"location":"","page":"Home","title":"Home","text":"outputs","category":"page"},{"location":"","page":"Home","title":"Home","text":"\"Model: Julia 1.0 was released on **August 8, 2018**.\"\n\n\"Model: Julia was created by a team of developers at MIT, led by **Jeff Bezanson, Stefan Karpinski, Viral B. Shah, and Alan Edelman**.\"","category":"page"},{"location":"#Count-Tokens","page":"Home","title":"Count Tokens","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using GoogleGenAI\nmodel = \"gemini-1.5-flash-latest\"\nn_tokens = count_tokens(ENV[\"GOOGLE_API_KEY\"], model, \"The Julia programming language\")\nprintln(n_tokens)","category":"page"},{"location":"","page":"Home","title":"Home","text":"outputs","category":"page"},{"location":"","page":"Home","title":"Home","text":"4","category":"page"},{"location":"#Create-Embeddings","page":"Home","title":"Create Embeddings","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using GoogleGenAI\nembeddings = embed_content(ENV[\"GOOGLE_API_KEY\"], \"embedding-001\", \"Hello\")\nprintln(size(embeddings.values))","category":"page"},{"location":"","page":"Home","title":"Home","text":"outputs","category":"page"},{"location":"","page":"Home","title":"Home","text":"(768,)","category":"page"},{"location":"","page":"Home","title":"Home","text":"using GoogleGenAI\nembeddings = embed_content(ENV[\"GOOGLE_API_KEY\"], \"embedding-001\", [\"Hello\", \"world\"])\nprintln(embeddings.response_status)\nprintln(size(embeddings.values[1]))\nprintln(size(embeddings.values[2]))","category":"page"},{"location":"","page":"Home","title":"Home","text":"outputs","category":"page"},{"location":"","page":"Home","title":"Home","text":"200\n(768,)\n(768,)","category":"page"},{"location":"#List-Models","page":"Home","title":"List Models","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using GoogleGenAI\nmodels = list_models(ENV[\"GOOGLE_API_KEY\"])\nfor m in models\n    if \"generateContent\" in m[:supported_generation_methods]\n        println(m[:name])\n    end\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"outputs","category":"page"},{"location":"","page":"Home","title":"Home","text":"gemini-1.0-pro-latest\ngemini-1.0-pro\ngemini-pro\ngemini-1.0-pro-001\ngemini-1.5-pro-latest\ngemini-1.5-pro-001\ngemini-1.5-pro\ngemini-1.5-pro-exp-0801\ngemini-1.5-pro-exp-0827\ngemini-1.5-flash-latest\ngemini-1.5-flash-001\ngemini-1.5-flash-001-tuning\ngemini-1.5-flash\ngemini-1.5-flash-exp-0827\ngemini-1.5-flash-8b-exp-0827","category":"page"},{"location":"#Safety-Settings","page":"Home","title":"Safety Settings","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"More information about the safety settings can be found here.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using GoogleGenAI\nsecret_key = ENV[\"GOOGLE_API_KEY\"]\nsafety_settings = [\n    Dict(\"category\" => \"HARM_CATEGORY_HATE_SPEECH\", \"threshold\" => \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"),\n    Dict(\"category\" => \"HARM_CATEGORY_SEXUALLY_EXPLICIT\", \"threshold\" => \"BLOCK_ONLY_HIGH\"),\n    Dict(\"category\" => \"HARM_CATEGORY_HARASSMENT\", \"threshold\" => \"BLOCK_MEDIUM_AND_ABOVE\"),\n    Dict(\"category\" => \"HARM_CATEGORY_DANGEROUS_CONTENT\", \"threshold\" => \"BLOCK_LOW_AND_ABOVE\")\n]\nmodel = \"gemini-1.5-flash-latest\"\nprompt = \"Hello\"\napi_kwargs = (safety_settings=safety_settings,)\nresponse = generate_content(secret_key, model, prompt; api_kwargs)","category":"page"}]
}
